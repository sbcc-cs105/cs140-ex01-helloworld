#!/usr/bin/env python

import sys
import os
import re
import requests
import xml.etree.ElementTree as ET

JENKINS_ADMIN_USER = 'ahknight'
JENKINS_ADMIN_TOKEN = '58dbffb6d983bca8e2ed5b2f0db218b2'
JENKINS_HOST = '209.129.49.15:8080'
JENKINS_BASE_URL = 'http://' + JENKINS_ADMIN_USER + ':' + JENKINS_ADMIN_TOKEN + '@' + JENKINS_HOST
JENKINS_BUILD_TOKEN = 'sbcc-cs140-grace-hopper'
JENKINS_DEFAULT_RECEPIENT = '$DEFAULT_RECIPIENTS'

GITHUB_ORGANIZATION = 'sbcc-cs140-fall2018'
GITHUB_BASE_URL = 'https://github.com/' + GITHUB_ORGANIZATION +'/'

BITBUCKET_HOST = '209.129.49.15:7990'
BITBUCKET_BASE_URL = 'http://' + JENKINS_ADMIN_USER + ':' + BITBUCKET_HOST

COURSE_NUM = 'CS140'
ASSIGNMENT_NUM = 'EX01'
ASSIGNMENT_NAME = 'HelloWorld'
ORIGINAL_JOB_NAME = COURSE_NUM +'-' + ASSIGNMENT_NUM + '-' + ASSIGNMENT_NAME
ORIGINAL_GITHUB_FULL_URL = GITHUB_BASE_URL +  ORIGINAL_JOB_NAME.lower() + '.git'

'https://github.com/sbcc-cs140-fall2018/cs140-ex01-helloworld.git/'

remote = sys.argv[1]
url = sys.argv[2]

def getCrumb():
	response = requests.get(JENKINS_BASE_URL + '/crumbIssuer/api/xml')
	root = ET.fromstring(response.text)
	return (root.findtext('.//crumbRequestField'), root.findtext('.//crumb'))

def getJenkinsBuild(jobName, crumbKey, crumb):
	response = requests.get(JENKINS_BASE_URL + '/job/' + jobName + '/config.xml', headers={crumbKey: crumb})
	return (response.status_code, response.text)

def createJenkinsBuild(jobName, config, crumbKey, crumb):
	email = os.popen('git log -1 --format=format:%ae HEAD').read()
	newConfig = config.replace(ORIGINAL_GITHUB_FULL_URL, url)
	newConfig = newConfig.replace(JENKINS_DEFAULT_RECEPIENT, email + ', ' + JENKINS_DEFAULT_RECEPIENT)
	response = requests.post(JENKINS_BASE_URL + '/createItem?name=' + jobName, data=newConfig, headers={crumbKey: crumb,'Content-Type': 'application/xml'})
	return response.status_code

def startBuild(jobName, crumbKey, crumb, force=False):
	if not force and len(os.popen("git cherry -v").read()) <= 0:
		print("You have no new commits and, therefore, nothing to build.")
		return

	jenkinsBuildUrl = JENKINS_BASE_URL + '/job/' + jobName + '/build?token=' + JENKINS_BUILD_TOKEN +'&delay=15sec'
	response = requests.get(jenkinsBuildUrl, headers={crumbKey: crumb})
	if response.status_code == 200 or response.status_code == 201:
		print("Sending build command for " + jobName + '. Build should begin in 15 seconds.')
	else:
		print("Sending build command for " + jobName + ' failed: {}'.format(response.status_code))

# Check if the student is trying to push to the original assignment repository
# instead of their forked repository.
print('Attempting to push to commits to ' + url)
if re.search('\/scm\/ex[0-9]{2}\/.+\.git', url) != None:
	print("You are trying to push to the assignment's original URL. Please see http://209.129.49.15:7990 for directions on correcting this in eclipse")
	sys.exit(1)

# Check if user.email is set properly
email = os.popen('git log -1 --format=format:%ae HEAD').read()
emailMatch = re.search('([^@]+)@pipeline.sbcc.edu', email)
if  emailMatch == None:
	print("You need to set your user.email config properly in git. Please see https://github.com/sbcc-cs140-f2018")
	sys.exit(1)

username = 	emailMatch.group(1)
print("SBCC user name: " + username)

# Grab the BitBucket user name from repository URL
githubUser = re.search('github.com\/([^\/]+)\/.+\.git', url).group(1)
userJobName = COURSE_NUM + '-' + ASSIGNMENT_NUM + '-' + githubUser + username

# Check if there is already a build on Jenkins for this student's fork
key, crumb = getCrumb()

status, body = getJenkinsBuild(userJobName, key, crumb)

if status != 200:
	print('Build not created yet, getting base build...')
	status, buildConfig = getJenkinsBuild(ORIGINAL_JOB_NAME, key, crumb)
	if status == 200:
		print('Found original build configuration...')
		if createJenkinsBuild(userJobName, buildConfig, key, crumb) == 200:
			print ('Successfully created new build')
		else:
			print ('Not able to create new build')
			sys.exit(1)
	else:
		print('Unable to find original build configuration')
		sys.exit(1)


# Kick off build, which should have a quiet period to allow this push to finish before starte the build
startBuild(userJobName, key, crumb)

